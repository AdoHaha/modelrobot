// Generated by CoffeeScript 1.7.1
(function() {
  window.App = window.App || {};

  App.gridX = false;

  App.gridY = false;

  App.gridZ = false;

  App.axes = true;

  App.ground = false;

  App.clock = new THREE.Clock();

  App.fillScene = function() {
    var ambientLight, dirLight, light, light2;
    window.scene = window.scene || new THREE.Scene;
    scene.fog = new THREE.Fog(0x808080, 2000, 4000);
    ambientLight = new THREE.AmbientLight(0x222222);
    light = new THREE.DirectionalLight(0xffffff, 0.7);
    light.position.set(200, -400, 500);
    light2 = new THREE.DirectionalLight(0xffffff, 1.0);
    light2.position.set(73, 184, 184);
    dirLight = new THREE.DirectionalLight(0xffffff, 1);
    dirLight.color.setHSL(0.1, 1, 0.95);
    dirLight.position.set(0, 40, 0);
    dirLight.position.multiplyScalar(50);
    scene.add(dirLight);
    scene.add(ambientLight);
    scene.add(light);
    scene.add(dirLight);
    if (App.ground) {
      Coordinates.drawGround({
        size: 10000
      });
    }
    if (App.gridX) {
      Coordinates.drawGrid({
        size: 10000,
        scale: 0.01
      });
    }
    if (App.gridZ) {
      Coordinates.drawGrid({
        size: 10000,
        scale: 0.01,
        orientation: "z"
      });
    }
    if (App.axes) {
      Coordinates.drawAllAxes({
        axisLength: 2,
        axisRadius: 0.01,
        axisTess: 50
      });
    }
    window.robotBaseMaterial = new THREE.MeshPhongMaterial({
      color: 0x6E23BB,
      specular: 0x6E23BB,
      shininess: 20
    });
    window.robotForearmMaterial = new THREE.MeshPhongMaterial({
      color: 0xF4C154,
      specular: 0xF4C154,
      shininess: 100
    });
    window.robotUpperArmMaterial = new THREE.MeshPhongMaterial({
      color: 0x95E4FB,
      specular: 0x95E4FB,
      shininess: 100
    });
    return true;
  };

  App.init = function() {
    var camera, canvasHeight, canvasRatio, canvasWidth, container, offsetHeight, offsetWidth;
    canvasWidth = window.innerWidth;
    offsetHeight = document.getElementById('controldiv').offsetHeight;
    offsetWidth = document.getElementById('controldiv').offsetWidth;
    canvasWidth = window.innerWidth - offsetWidth - 148;
    canvasHeight = window.innerHeight;
    canvasRatio = canvasWidth / canvasHeight;
    window.renderer = new THREE.WebGLRenderer({
      antialias: true
    });
    window.renderer.gammaInput = true;
    window.renderer.gammaOutput = true;
    window.renderer.setSize(canvasWidth, canvasHeight);
    window.renderer.setClearColorHex(0xAAAAAA, 1.0);
    container = document.getElementById('container');
    container.appendChild(window.renderer.domElement);
    camera = new THREE.PerspectiveCamera(30, canvasRatio, 1, 10000);
    camera.position.set(2.5, 2, 4);
    camera.up = new THREE.Vector3(0, 0, 1);
    App.camera = camera;
    return App.cameraControls = new THREE.OrbitAndPanControls(camera, renderer.domElement);
  };

  App.fillScene();

  true;

  App.setupGui = function() {
    window.effectController = {
      newGridX: App.gridX,
      newGridY: App.gridY,
      newGridZ: App.gridZ,
      newGround: App.ground,
      newAxes: App.axes,
      uy: 70.0,
      uz: -15.0,
      swiatlox: -500,
      swiatloy: 250,
      swiatloz: -200,
      fy: 10.0,
      fz: 60.0
    };
    if (_.has(App, "gui")) {
      App.gui.destroy();
    }
    App.gui = new dat.GUI();
    App.robotjointmanipall = new App.RobotJointManipAll({
      gui: App.gui,
      joints: window.robotjointcollection
    });
    App.animform.robotcontroller = App.robotjointmanipall;
    return App.gui.__folders["Joint values"].open();
  };

  App.takeScreenshot = function() {
    var img1, imgTarget;
    App.render();
    img1 = window.renderer.domElement.toDataURL("image/png");
    imgTarget = window.open('', 'For documenting your work');
    imgTarget.document.write('<img src="' + img1 + '"/>');
    return true;
  };

  App.animate = function() {
    window.requestAnimationFrame(App.animate);
    App.render();
    return true;
  };

  App.render = function() {
    var delta;
    delta = App.clock.getDelta();
    App.cameraControls.update(delta);
    if (effectController.newGridX !== App.gridX || effectController.newGridY !== App.gridY || effectController.newGridZ !== App.gridZ || effectController.newGround !== App.ground || effectController.newAxes !== App.axes) {
      App.gridX = effectController.newGridX;
      App.gridY = effectController.newGridY;
      App.gridZ = effectController.newGridZ;
      App.ground = effectController.newGround;
      App.axes = effectController.newAxes;
      App.fillScene();
    }
    window.renderer.render(scene, App.camera);
    if (App.animform != null) {
      App.animform.update();
    }
    return true;
  };

  $(document).ready(App.init);

  $(function() {
    App.forumula = new App.RobotForm();
    App.animform = new App.AnimationForm({
      robotcontroller: App.robotjointmanipall
    });
    return $.when($.get("../testowe/pi_robot_urdf.urdf", window.parseRobot)).then(function() {
      App.setupGui();
      return App.animate();
    });
  });

}).call(this);
